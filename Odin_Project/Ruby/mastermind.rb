

# all the possible combinations between 1111-6666
@possible_numbers = [1,2,3,4,5,6].repeated_permutation(4).to_a.map!(&:join)

# random number generated by the computer
@computer_random_code = @possible_numbers.shuffle.first.to_s

# R = number of red pegs (position & number are both right)
# W = number of white pegs (only the number is right)
@hint = {R: 0, W: 0}

@computer_score = 0
@player_score = 0
@rounds = 12

WELCOME = " Welcome to MASTERMIND.\n
  Choose your option: \n
  1. Codemaker \n
  2. Codebreaker \n"

puts WELCOME
game_mode = gets.chomp
if game_mode == "1"
  codemaker
elsif game_mode == "2"
  codebreaker
else
  puts "Exiting the game..."
  exit
end

def codemaker
  computer_guess = "1111"
  puts "Enter your Secret Code: "
  secret_code = gets.chomp

  while @rounds > 0 do
    puts "Computer guess: #{computer_guess}"
    if computer_guess == secret_code
      puts "Computer guessed it! You lose!"
      exit
    else
      # check how many white and red pegs
      secret_code.chars.each_with_index do |digit, index|
        # if the number and position is the same, increment R
        if digit == computer_guess[index]
          @hint[:R] += 1
        # if only the number is the same, increment W
        elsif computer_guess.include?(digit)
          @hint[:W] += 1
        # otherwise display the hint and play the next round
        else
          next
        end

      end
      puts @hint

      # delete any combinations with matching digits

      # no digits match
      if @hint[:W] == 0 && @hint[:R] == 0
        secret_code.chars.each do |digit|
          @possible_numbers.each do |combo|
            if combo.to_s.include? digit
              @possible_numbers.delete(combo)
            end
          end
        end
        puts "#{1296 - @possible_numbers.size} possibilities removed."
        puts "#{@possible_numbers.size} possibilities remaining."

      # no positions match

      end
    end
    rounds -= 1
  endt
end

def codebreaker
  puts "Guess a 4-digit secret code between 1111 and 6666."
  puts "Enter 'stop' to finish the game"

  while @rounds > 0 do

    puts "Round #{13-@rounds}/12"
    puts "Enter a number: "
    player_answer = gets.chomp

    if player_answer.downcase == "stop"
      exit
    elsif player_answer.to_i.digits.count != 4
      puts "Enter a valid 4-digit number"
    else
      @computer_random_code.chars.each_with_index do |digit, index|
        # if the number and position is the same, increment R
        if digit == player_answer[index]
          @hint[:R] += 1
        # if only the number is the same, increment W
        elsif player_answer.include?(digit)
          @hint[:W] += 1
        # otherwise display the hint and play the next round
        else
          next
        end

      end

      if player_answer == @computer_random_code
        puts "Nailed it!"
        puts "Computer Score: #{@computer_score}"
        exit
      else
        puts @hint
        @hint = {R: 0, W: 0}
        @computer_score += 1
      end

      @rounds -= 1
      if @rounds == 0
        puts "Rounds up! You didn't guess it."
        puts "The Secret Code was: #{@computer_random_code}"
        @computer_score += 1
        puts "Computer Score: #{@computer_score}"
      end
    end
  end
end
